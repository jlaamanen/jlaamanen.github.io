{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/key-note-maps/wicki-hayden.ts","../../src/key-note-maps/piano.ts","../../src/keyboard.ts","../../src/Keyboard.svelte","../../src/notes.ts","../../src/math.ts","../../src/SvgArc.svelte","../../src/Knob.svelte","../../src/oscillator.ts","../../src/OscillatorControl.svelte","../../src/SynthControls.svelte","../../src/Synth.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root.host) {\n        return root;\n    }\n    return document;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => svg ? svg_element(name) : element(name));\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.42.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export default {\n    // First row\n    Backquote: null,\n    Digit1: \"C#4\",\n    Digit2: \"D#4\",\n    Digit3: \"F4\",\n    Digit4: \"G4\",\n    Digit5: \"A4\",\n    Digit6: \"B4\",\n    Digit7: \"C#5\",\n    Digit8: \"D#5\",\n    Digit9: \"F5\",\n    Digit0: \"G5\",\n    Minus: \"A5\",\n    Equal: \"B5\",\n    // Second row\n    KeyQ: \"G#3\",\n    KeyW: \"A#3\",\n    KeyE: \"C4\",\n    KeyR: \"D4\",\n    KeyT: \"E4\",\n    KeyY: \"F#4\",\n    KeyU: \"G#4\",\n    KeyI: \"A#4\",\n    KeyO: \"C5\",\n    KeyP: \"D5\",\n    BracketLeft: \"E5\",\n    BracketRight: \"F#5\",\n    // Third row\n    KeyA: \"D#3\",\n    KeyS: \"F3\",\n    KeyD: \"G3\",\n    KeyF: \"A3\",\n    KeyG: \"B3\",\n    KeyH: \"C#4\",\n    KeyJ: \"D#4\",\n    KeyK: \"F4\",\n    KeyL: \"G4\",\n    Semicolon: \"A4\",\n    Quote: \"B4\",\n    Backslash: \"C#5\",\n    // Fourth row\n    KeyZ: \"A#2\",\n    KeyX: \"C3\",\n    KeyC: \"D3\",\n    KeyV: \"E3\",\n    KeyB: \"F#3\",\n    KeyN: \"G#3\",\n    KeyM: \"A#3\",\n    Comma: \"C4\",\n    Period: \"D4\",\n    Slash: \"E4\",\n};\n","export default {\n    // First row\n    Backquote: null,\n    Digit1: null,\n    Digit2: \"F#3\",\n    Digit3: \"G#3\",\n    Digit4: \"A#3\",\n    Digit5: null,\n    Digit6: \"C#4\",\n    Digit7: \"D#4\",\n    Digit8: null,\n    Digit9: \"F#4\",\n    Digit0: \"G#4\",\n    Minus: \"A#4\",\n    Equal: null,\n    // Second row\n    KeyQ: \"F3\",\n    KeyW: \"G3\",\n    KeyE: \"A3\",\n    KeyR: \"B3\",\n    KeyT: \"C4\",\n    KeyY: \"D4\",\n    KeyU: \"E4\",\n    KeyI: \"F4\",\n    KeyO: \"G4\",\n    KeyP: \"A4\",\n    BracketLeft: \"B4\",\n    BracketRight: \"C5\",\n    // Third row\n    KeyA: null,\n    KeyS: \"C#2\",\n    KeyD: \"D#2\",\n    KeyF: null,\n    KeyG: \"F#2\",\n    KeyH: \"G#2\",\n    KeyJ: \"A#2\",\n    KeyK: null,\n    KeyL: \"C#3\",\n    Semicolon: \"D#3\",\n    Quote: null,\n    Backslash: null,\n    // Fourth row\n    KeyZ: \"C2\",\n    KeyX: \"D2\",\n    KeyC: \"E2\",\n    KeyV: \"F2\",\n    KeyB: \"G2\",\n    KeyN: \"A2\",\n    KeyM: \"B2\",\n    Comma: \"C3\",\n    Period: \"D3\",\n    Slash: \"E3\",\n};\n","/**\n * Default keyboard layout.\n * Should be pretty much the same everywhere, works with scandinavian keyboard.\n * Null values represent empty \"spacers\".\n * Keyboard codes from here: https://www.w3.org/TR/uievents-code/images/keyboard-codes-alphanum1.svg\n */\nexport const defaultKeyboardLayout = [\n    [\n        \"Digit1\",\n        \"Digit2\",\n        \"Digit3\",\n        \"Digit4\",\n        \"Digit5\",\n        \"Digit6\",\n        \"Digit7\",\n        \"Digit8\",\n        \"Digit9\",\n        \"Digit0\",\n        \"Minus\",\n        \"Equal\",\n    ],\n    [\n        \"KeyQ\",\n        \"KeyW\",\n        \"KeyE\",\n        \"KeyR\",\n        \"KeyT\",\n        \"KeyY\",\n        \"KeyU\",\n        \"KeyI\",\n        \"KeyO\",\n        \"KeyP\",\n        \"BracketLeft\",\n        \"BracketRight\",\n    ],\n    [\n        null,\n        \"KeyA\",\n        \"KeyS\",\n        \"KeyD\",\n        \"KeyF\",\n        \"KeyG\",\n        \"KeyH\",\n        \"KeyJ\",\n        \"KeyK\",\n        \"KeyL\",\n        \"Semicolon\",\n        \"Quote\",\n        \"Backslash\",\n    ],\n    [\n        null,\n        \"KeyZ\",\n        \"KeyX\",\n        \"KeyC\",\n        \"KeyV\",\n        \"KeyB\",\n        \"KeyN\",\n        \"KeyM\",\n        \"Comma\",\n        \"Period\",\n        \"Slash\",\n    ],\n];\n","<script lang=\"ts\">\n  import type { KeyNoteMap } from \"./notes\";\n  import type { KeyboardKey } from \"./keyboard\";\n  import { defaultKeyboardLayout } from \"./keyboard\";\n\n  export let pressedKeys: KeyboardKey[] = [];\n  /**\n   * How many simultaneous notes are allowed?\n   */\n  export let polyphony = 1;\n  export let keyNoteMap: KeyNoteMap;\n\n  function getKeyColor(key: KeyboardKey) {\n    const note = keyNoteMap[key];\n    return typeof note === \"string\" && note.includes(\"#\") ? \"black\" : \"white\";\n  }\n\n  let keyBuffer: KeyboardKey[] = [];\n  // const keyToFrequencyMap = getKeyToFrequencyMap();\n  let mousePressed = false;\n\n  function handleKeyDown(event: KeyboardEvent) {\n    // TODO pass control key events to a different handler\n    if (!Object.keys(keyNoteMap).includes(event.code) || event.repeat) {\n      return;\n    }\n    keyBuffer = [\n      ...keyBuffer.filter((key) => key !== event.code),\n      event.code as KeyboardKey,\n    ];\n  }\n\n  function handleKeyUp(event: KeyboardEvent) {\n    keyBuffer = keyBuffer.filter((key) => key !== event.code);\n  }\n\n  function clearKeyBuffer() {\n    keyBuffer = [];\n  }\n\n  $: pressedKeys = keyBuffer.slice(-polyphony);\n</script>\n\n<div\n  tabindex=\"0\"\n  class=\"main\"\n  on:keydown|preventDefault={handleKeyDown}\n  on:keyup|preventDefault={handleKeyUp}\n  on:focus\n  on:blur={clearKeyBuffer}\n  on:mouseleave={() => {\n    if (mousePressed) {\n      clearKeyBuffer();\n      mousePressed = false;\n    }\n  }}\n  on:mouseup={() => {\n    clearKeyBuffer();\n    mousePressed = false;\n  }}\n>\n  {#each defaultKeyboardLayout as row}\n    <div class=\"row\">\n      {#each row as key}\n        {#if !key || !keyNoteMap[key]}\n          <div\n            class={[\"key\", [\"KeyF\", \"KeyJ\"].includes(key) ? \"dotted\" : null]\n              .filter(Boolean)\n              .join(\" \")}\n          >\n            &nbsp;\n          </div>\n        {:else}\n          <div\n            class={[\n              \"key\",\n              !key\n                ? \"spacer\"\n                : pressedKeys.includes(key)\n                ? \"pressed\"\n                : keyBuffer.includes(key)\n                ? \"buffered\"\n                : null,\n              // Keys with \"dots\"\n              [\"KeyF\", \"KeyJ\"].includes(key) ? \"dotted\" : null,\n              getKeyColor(key),\n            ]\n              .filter(Boolean)\n              .join(\" \")}\n            on:mousedown={() => {\n              clearKeyBuffer();\n              mousePressed = true;\n              keyBuffer = [key];\n            }}\n            on:mouseenter={() => {\n              if (mousePressed) {\n                keyBuffer = [key];\n              }\n            }}\n          >\n            {keyNoteMap[key]}\n          </div>\n        {/if}\n      {/each}\n    </div>\n  {/each}\n</div>\n\n<style>\n  .main {\n    background: grey;\n    transition: opacity 200ms ease-in-out;\n    opacity: 0.6;\n    display: flex;\n    flex-direction: column;\n    padding-bottom: calc(var(--size) * 0.2875);\n    width: fit-content;\n    user-select: none;\n    --size: 4rem;\n    --margin: 1px;\n  }\n\n  .main:focus {\n    background: green;\n    opacity: 1;\n  }\n\n  .row {\n    font-size: 0;\n    max-width: 100%;\n    white-space: nowrap;\n    width: fit-content;\n  }\n\n  .row:nth-child(even) {\n    position: relative;\n    left: calc(var(--size) * 0.5 + var(--margin));\n  }\n\n  .key {\n    position: relative;\n    width: var(--size);\n    margin: var(--margin);\n    height: calc(var(--size) * 1.1547);\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    font-size: calc(var(--size) * 0.3);\n    clip-path: polygon(0% 25%, 0% 75%, 50% 100%, 100% 75%, 100% 25%, 50% 0%);\n    margin-bottom: calc(var(--margin) - var(--size) * 0.2885);\n  }\n\n  .key.spacer {\n    visibility: hidden;\n  }\n\n  .key.black {\n    color: white;\n    background: black;\n  }\n\n  .key.white {\n    color: black;\n    background: white;\n  }\n\n  .key.dotted::before {\n    content: \"\\025cf\";\n    font-size: 0.4em;\n    position: absolute;\n    bottom: 10%;\n    left: 0;\n    right: 0;\n    text-align: center;\n  }\n\n  .key.pressed {\n    box-shadow: inset 0 0 calc(var(--size) * 0.5) red;\n    transform: translate(1px, 1px);\n  }\n</style>\n","const notes = [\"A\", \"A#\", \"B\", \"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\"];\nfunction getFrequency(note) {\n    const octave = Number(note.length === 3 ? note.charAt(2) : note.charAt(1));\n    let keyNumber = notes.indexOf(note.slice(0, -1));\n    if (keyNumber < 3) {\n        keyNumber = keyNumber + 12 + (octave - 1) * 12 + 1;\n    }\n    else {\n        keyNumber = keyNumber + (octave - 1) * 12 + 1;\n    }\n    // Return frequency of note\n    return 440 * Math.pow(2, (keyNumber - 49) / 12);\n}\nexport function getKeyToFrequencyMap(keyNoteMap) {\n    return Object.entries(keyNoteMap).reduce((map, [key, note]) => (Object.assign(Object.assign({}, map), { [key]: !note\n            ? null\n            : typeof note === \"string\"\n                ? getFrequency(note)\n                : note })), {});\n}\n","/**\n * http://xahlee.info/js/svg_circle_arc.html\n */\nconst cos = Math.cos;\nconst sin = Math.sin;\nconst π = Math.PI;\nconst f_matrix_times = ([[a, b], [c, d]], [x, y]) => [a * x + b * y, c * x + d * y];\nconst f_rotate_matrix = (x) => [\n    [cos(x), -sin(x)],\n    [sin(x), cos(x)],\n];\nconst f_vec_add = ([a1, a2], [b1, b2]) => [\n    a1 + b1,\n    a2 + b2,\n];\nexport const f_svg_ellipse_arc = ([cx, cy], [rx, ry], [t1, Δ], φ) => {\n    Δ = Δ % (2 * π);\n    const rotMatrix = f_rotate_matrix(φ);\n    const [sX, sY] = f_vec_add(f_matrix_times(rotMatrix, [rx * cos(t1), ry * sin(t1)]), [cx, cy]);\n    const [eX, eY] = f_vec_add(f_matrix_times(rotMatrix, [rx * cos(t1 + Δ), ry * sin(t1 + Δ)]), [cx, cy]);\n    const fA = Δ > π ? 1 : 0;\n    const fS = Δ > 0 ? 1 : 0;\n    const path_2wk2r = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    path_2wk2r.setAttribute(\"d\", \"M \" +\n        sX +\n        \" \" +\n        sY +\n        \" A \" +\n        [rx, ry, (φ / (2 * π)) * 360, fA, fS, eX, eY].join(\" \"));\n    return path_2wk2r;\n};\n","<script lang=\"ts\">\n  import { f_svg_ellipse_arc } from \"./math\";\n\n  export let sweep: number;\n\n  let svgRootRef: SVGElement;\n\n  $: svgElement = f_svg_ellipse_arc(\n    [70, 70],\n    [50, 50],\n    [0, 1.5 * Math.PI * sweep],\n    (3 * Math.PI) / 4\n  );\n\n  $: {\n    if (svgRootRef) {\n      svgRootRef.innerHTML = \"\";\n      svgRootRef.appendChild(svgElement);\n    }\n  }\n</script>\n\n<!-- TODO: dispatch click event on arc that returns procents?? -->\n<svg bind:this={svgRootRef} viewBox=\"0 0 140 140\" />\n\n<style>\n  svg {\n    stroke: black;\n    fill: none;\n    stroke-width: 1rem;\n    width: 100%;\n  }\n</style>\n","<script lang=\"ts\">\n  import SvgArc from \"./SvgArc.svelte\";\n\n  export let label: string = null;\n  export let id = \"\";\n  export let min = 0;\n  export let max = 100;\n  export let value = 0;\n  export let step = 1;\n  export let invert = false;\n  export let initialValue: number = null;\n  export let size = 50;\n  export let unit = \"\";\n  export let disabled = false;\n\n  const singleClickDelay = 500;\n  let singleClickTimeout: NodeJS.Timeout;\n  let inputElementVisible = false;\n  let inputElement: HTMLInputElement;\n\n  // Use a different value internally to make sensitivity always the same\n  const internalStepCount = 300;\n  // Scale internal value\n  // TODO how to update this when value is changed from the outside?\n  let internalValue = ((value - min) / (max - min)) * internalStepCount;\n  $: {\n    internalValue = Math.max(0, Math.min(internalStepCount, internalValue));\n  }\n\n  $: {\n    value = (internalValue / internalStepCount) * (max - min) + min;\n    // TODO: round to closest step?\n    value = Math.round(value);\n  }\n\n  function handleWheel(event: WheelEvent) {\n    if (inputElementVisible) {\n      return;\n    }\n    internalValue += (invert ? -1 : 1) * event.deltaY > 0 ? step : -step;\n  }\n\n  function handleClick() {\n    clearTimeout(singleClickTimeout);\n    singleClickTimeout = setTimeout(() => {\n      inputElementVisible = true;\n    }, singleClickDelay);\n  }\n\n  function handleDoubleClick() {\n    clearTimeout(singleClickTimeout);\n    if (initialValue != null) {\n      value = initialValue;\n    }\n  }\n\n  // Clamp value between min and max\n  // $: value = Math.max(min, Math.min(max, value));\n\n  // Whenever input element changes (i.e. becomes visible), focus on it\n  $: inputElement?.focus();\n</script>\n\n<div\n  class={`knob${disabled ? \" disabled\" : \"\"}`}\n  title={`${label ? `${label}: ` : \"\"}${value}${unit.length ? ` ${unit}` : \"\"}`}\n  style={`width: ${size}px`}\n  on:mousedown={(event) => {\n    if (!inputElementVisible) {\n      event.preventDefault();\n    }\n  }}\n  on:wheel|preventDefault={handleWheel}\n  on:click|preventDefault={handleClick}\n  on:dblclick|preventDefault={handleDoubleClick}\n>\n  <div class=\"background-arc\">\n    <SvgArc sweep={1} />\n  </div>\n  <div class=\"foreground-arc\">\n    <SvgArc sweep={(value - min) / (max - min)} />\n  </div>\n  <div class=\"value\">\n    {#if inputElementVisible}\n      <input\n        {id}\n        bind:this={inputElement}\n        type=\"number\"\n        bind:value\n        {step}\n        on:blur={() => {\n          inputElementVisible = false;\n        }}\n        on:keyup={(event) => {\n          if ([\"Enter\", \"NumpadEnter\"].includes(event.code)) {\n            inputElementVisible = false;\n          }\n        }}\n      />\n    {:else}\n      <svg viewBox=\"0 0 60 40\">\n        <text text-anchor=\"middle\" x=\"50%\" y=\"60%\">{value}</text>\n        <text text-anchor=\"middle\" x=\"50%\" y=\"100%\">{unit}</text>\n      </svg>\n    {/if}\n  </div>\n</div>\n\n<style>\n  .knob {\n    position: relative;\n    cursor: pointer;\n    --background-arc-color: #000;\n    --foreground-arc-color: rgb(28, 126, 255);\n  }\n\n  .knob.disabled {\n    filter: grayscale(100%);\n    opacity: 0.8;\n    pointer-events: none;\n    --background-arc-color: #444;\n    --foreground-arc-color: #999;\n  }\n\n  .background-arc :global(svg) {\n    stroke: var(--background-arc-color);\n  }\n\n  .foreground-arc {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n\n  .foreground-arc :global(svg) {\n    stroke: var(--foreground-arc-color);\n    /* TODO: shadow size is not responsive, paths inside svg have different rules */\n    filter: drop-shadow(0 0 0.1rem var(--foreground-arc-color));\n  }\n\n  .value {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n\n  .value input {\n    width: 4rem;\n  }\n\n  .value svg {\n    user-select: none;\n    fill: currentColor;\n  }\n</style>\n","export const waveforms = [\"sine\", \"square\", \"sawtooth\", \"triangle\"];\nlet audioContext = null;\nlet oscillators = [];\nexport function initializeAudioContext() {\n    if (!audioContext) {\n        audioContext = new window.AudioContext();\n    }\n}\nexport function isAudioContextInitialized() {\n    return Boolean(audioContext);\n}\nexport function setOscillators(newOscillators) {\n    stopOscillators();\n    oscillators = [];\n    newOscillators\n        .filter((oscillator) => oscillator.enabled)\n        .forEach((oscillator) => {\n        createOscillator(oscillator);\n    });\n}\nfunction createOscillator(oscillator) {\n    // Oscillator node\n    const oscillatorNode = audioContext.createOscillator();\n    oscillatorNode.type = oscillator.waveform;\n    oscillatorNode.detune.value = oscillator.detune;\n    // TODO phase? etc\n    // Envelope gain node - not connected until to oscillator until notes are pressed\n    const envelopeGainNode = audioContext.createGain();\n    envelopeGainNode.gain.value = 1;\n    // Output gain node\n    const outputGainNode = audioContext.createGain();\n    outputGainNode.gain.value = oscillator.gain / 100;\n    envelopeGainNode.connect(outputGainNode);\n    // Connect to audio context destination\n    outputGainNode.connect(audioContext.destination);\n    oscillatorNode.start();\n    // Add to internal array of oscillators\n    oscillators = [\n        ...oscillators,\n        {\n            oscillatorNode,\n            envelopeGainNode,\n            outputGainNode,\n            octave: oscillator.octave,\n        },\n    ];\n    if (oscillators.length > 3) {\n        console.log(\"oscillator count:\", oscillators.length);\n    }\n}\n/**\n *\n -1 => frequency / 2 => / 2^1\n -2 => frequency / 4\n -3 => frequency / 8\n */\nfunction getTransposedFrequency(oscillator, frequency) {\n    return frequency * 2 ** oscillator.octave;\n}\nexport function setWaveform(waveform) {\n    oscillators.forEach((oscillator) => {\n        oscillator.oscillatorNode.type = waveform;\n    });\n}\nexport function setOutputGain(gain) {\n    oscillators.forEach((oscillator) => {\n        oscillator.outputGainNode.gain.setValueAtTime(gain, audioContext.currentTime);\n    });\n}\nexport function setFrequency(frequency) {\n    oscillators.forEach((oscillator) => {\n        const targetFrequency = getTransposedFrequency(oscillator, frequency);\n        oscillator.oscillatorNode.frequency.setValueAtTime(targetFrequency, audioContext.currentTime);\n        oscillator.oscillatorNode.connect(oscillator.outputGainNode);\n    });\n}\nexport function setFrequencyPortamento(frequency, duration) {\n    oscillators.forEach((oscillator) => {\n        // const currentFrequency = oscillator.oscillatorNode.frequency.value;\n        const targetFrequency = getTransposedFrequency(oscillator, frequency);\n        // oscillator.oscillatorNode.frequency.setValueAtTime(\n        //   currentFrequency,\n        //   audioContext.currentTime\n        // );\n        oscillator.oscillatorNode.frequency.exponentialRampToValueAtTime(targetFrequency, audioContext.currentTime + duration / 1000);\n        oscillator.oscillatorNode.connect(oscillator.outputGainNode);\n    });\n}\nexport function stopOscillators() {\n    oscillators.forEach((oscillator) => {\n        try {\n            oscillator.oscillatorNode.disconnect(oscillator.outputGainNode);\n        }\n        catch (error) {\n            // Ignore - oscillator wasn't connected\n        }\n    });\n}\n","<script lang=\"ts\">\n  import Knob from \"./Knob.svelte\";\n  import { waveforms } from \"./oscillator\";\n\n  export let enabled: boolean;\n  export let waveform: \"sine\" | \"square\" | \"sawtooth\" | \"triangle\";\n  export let gain: number;\n  export let detune: number;\n  export let octave: number;\n  export let invertKnobs = false;\n</script>\n\n<div class=\"container\">\n  <fieldset disabled={!enabled}>\n    <legend>\n      <label for=\"enabled\">Enable</label>\n      <input type=\"checkbox\" id=\"enabled\" bind:checked={enabled} />\n    </legend>\n    <label for=\"waveform\">Waveform</label>\n    <select id=\"waveform\" bind:value={waveform}>\n      {#each waveforms as waveform}\n        <option value={waveform}>{waveform}</option>\n      {/each}\n    </select>\n    <label for=\"gain\">Gain</label>\n    <Knob\n      id=\"gain\"\n      label=\"Gain\"\n      bind:value={gain}\n      min={0}\n      max={100}\n      step={1}\n      unit=\"%\"\n      invert={invertKnobs}\n    />\n    <label for=\"detune\">Detune</label>\n    <Knob\n      label=\"Detune\"\n      id=\"detune\"\n      min={-50}\n      max={50}\n      step={1}\n      initialValue={0}\n      bind:value={detune}\n      unit=\"c\"\n      invert={invertKnobs}\n    />\n    <label for=\"octave\">Octave</label>\n    <Knob\n      label=\"Octave\"\n      id=\"octave\"\n      min={-2}\n      max={2}\n      step={1}\n      initialValue={0}\n      bind:value={octave}\n      invert={invertKnobs}\n    />\n  </fieldset>\n</div>\n\n<style>\n  .container {\n    background: #ccc;\n    display: inline-flex;\n    padding: 1rem;\n  }\n</style>\n","<script lang=\"ts\">\n  import Knob from \"./Knob.svelte\";\n\n  import type { Oscillator } from \"./oscillator\";\n  import OscillatorControl from \"./OscillatorControl.svelte\";\n\n  export let portamentoEnabled: boolean;\n  export let portamentoDuration: number;\n  export let oscillators: Oscillator[];\n\n  let invertKnobs = false;\n</script>\n\n<label for=\"invert-knobs\">Invert knob wheel control?</label>\n<input id=\"invert-knobs\" type=\"checkbox\" bind:checked={invertKnobs} />\n\n<label for=\"portamento-enabled\">Portamento</label>\n<input\n  id=\"portamento-enabled\"\n  type=\"checkbox\"\n  bind:checked={portamentoEnabled}\n/>\n<Knob\n  label=\"Portamento duration\"\n  id=\"portamento-duration\"\n  bind:value={portamentoDuration}\n  disabled={!portamentoEnabled}\n  unit=\"ms\"\n  min={0}\n  max={200}\n  step={1}\n  invert={invertKnobs}\n/>\n{#each oscillators as oscillator}\n  <OscillatorControl\n    {invertKnobs}\n    bind:enabled={oscillator.enabled}\n    bind:waveform={oscillator.waveform}\n    bind:gain={oscillator.gain}\n    bind:detune={oscillator.detune}\n    bind:octave={oscillator.octave}\n  />\n{/each}\n","<script lang=\"ts\">\n  import * as keyNoteMaps from \"./key-note-maps/index\";\n  import Keyboard from \"./Keyboard.svelte\";\n  import { getKeyToFrequencyMap } from \"./notes\";\n  import type { KeyNoteMap } from \"./notes\";\n  import type { KeyboardKey } from \"./keyboard\";\n  import SynthControls from \"./SynthControls.svelte\";\n  import {\n    setOscillators,\n    setFrequency,\n    setFrequencyPortamento,\n    stopOscillators,\n    initializeAudioContext,\n    isAudioContextInitialized,\n  } from \"./oscillator\";\n  import type { Oscillator } from \"./oscillator\";\n\n  export let keyNoteMap: KeyNoteMap = keyNoteMaps.wickiHayden;\n\n  let pressedKeys: KeyboardKey[] = [];\n  let keyNoteMapName: keyof typeof keyNoteMaps = \"wickiHayden\";\n  let portamentoEnabled = false;\n  let portamentoDuration = 50;\n  let oscillators: Oscillator[] = [\n    {\n      enabled: true,\n      waveform: \"sawtooth\",\n      gain: 20,\n      detune: 0,\n      octave: 0,\n    },\n    {\n      enabled: true,\n      waveform: \"sawtooth\",\n      gain: 15,\n      detune: -10,\n      octave: 1,\n    },\n    {\n      enabled: true,\n      waveform: \"sawtooth\",\n      gain: 15,\n      detune: 10,\n      octave: -1,\n    },\n  ];\n\n  $: {\n    if (isAudioContextInitialized()) {\n      setOscillators(oscillators);\n    }\n  }\n\n  // Pre-calculate frequencies when key note mapping is changed\n  $: keyToFrequencyMap = getKeyToFrequencyMap(keyNoteMap);\n\n  $: {\n    if (pressedKeys.length === 1) {\n      const targetFrequency = keyToFrequencyMap[pressedKeys[0]];\n      if (portamentoEnabled) {\n        setFrequencyPortamento(targetFrequency, portamentoDuration);\n      } else {\n        setFrequency(targetFrequency);\n      }\n    } else {\n      stopOscillators();\n    }\n  }\n\n  $: keyNoteMap = keyNoteMaps[keyNoteMapName];\n</script>\n\n<button\n  on:click={() => {\n    stopOscillators();\n  }}>PANIC</button\n>\n<SynthControls\n  bind:oscillators\n  bind:portamentoDuration\n  bind:portamentoEnabled\n/>\n<div\n  class=\"keyboard\"\n  on:click={() => {\n    initializeAudioContext();\n    setOscillators(oscillators);\n  }}\n>\n  <select bind:value={keyNoteMapName}>\n    {#each Object.keys(keyNoteMaps) as name}\n      <option value={name}>{name}</option>\n    {/each}\n  </select>\n  <Keyboard {keyNoteMap} polyphony={1} bind:pressedKeys />\n</div>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n    props: {\n        name: 'world'\n    }\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","select_option","select","option","__value","selected","select_value","selected_option","querySelector","current_component","set_current_component","component","bubble","callbacks","$$","type","slice","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","bind","index","props","undefined","bound","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","indexOf","splice","$set","$$props","obj","$$set","keys","Backquote","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","Digit0","Minus","Equal","KeyQ","KeyW","KeyE","KeyR","KeyT","KeyY","KeyU","KeyI","KeyO","KeyP","BracketLeft","BracketRight","KeyA","KeyS","KeyD","KeyF","KeyG","KeyH","KeyJ","KeyK","KeyL","Semicolon","Quote","Backslash","KeyZ","KeyX","KeyC","KeyV","KeyB","KeyN","KeyM","Comma","Period","Slash","defaultKeyboardLayout","includes","Boolean","join","pressedKeys","polyphony","keyNoteMap","keyBuffer","mousePressed","clearKeyBuffer","key","note","code","repeat","notes","getFrequency","octave","Number","charAt","keyNumber","Math","pow","cos","sin","PI","f_matrix_times","x","y","f_vec_add","a1","a2","b1","b2","f_svg_ellipse_arc","cx","cy","rx","ry","t1","rotMatrix","sX","sY","eX","eY","fA","fS","path_2wk2r","svgRootRef","sweep","svgElement","innerHTML","singleClickTimeout","inputElement","label","id","min","max","step","invert","initialValue","size","unit","disabled","inputElementVisible","internalValue","round","focus","deltaY","clearTimeout","setTimeout","waveforms","audioContext","oscillators","setOscillators","newOscillators","stopOscillators","oscillator","enabled","oscillatorNode","createOscillator","waveform","detune","envelopeGainNode","createGain","gain","outputGainNode","connect","destination","start","console","log","getTransposedFrequency","frequency","setFrequency","targetFrequency","setValueAtTime","currentTime","setFrequencyPortamento","duration","exponentialRampToValueAtTime","disconnect","error","invertKnobs","r","portamentoEnabled","portamentoDuration","keyNoteMaps","keyNoteMaps.wickiHayden","keyNoteMapName","keyToFrequencyMap","entries","reduce","assign","getKeyToFrequencyMap","window","AudioContext","body"],"mappings":"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"}